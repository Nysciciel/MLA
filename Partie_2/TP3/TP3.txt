===== Installer des liaisons dans un réseau ====

Note préliminaire
=================
Dans le TP précédent, nous avions besoin de récupérer le coefficient directeur d'un rayon. Le problème est le suivant:
CPLEX prouve que le problème est non borné ou infaisable lors du présolve. La résolution n'a alors pas démarré et il 
est donc impossible d'accéder aux valeurs des variables. Pour contrer ce phénomène, nous avons désactivé le présolve.
CPLEX renvoit alors le statut DUAL_INFEASIBLE (qui est plus précis que le précédent) et on a accès aux valeurs des 
variables qui nous donnent directement le coefficient directeur du rayon en question. 
Cette méthode s'est avérée fonctionnelle lors du TP précédent jusqu'à 3000 variables. En effet, après ce seuil, CPLEX
active certains paramètres de calcul parallèle. Ce qui entraine une erreur lors de la résolution. Afin de palier à ce 
problème, nous pouvons soit, n'autoriser qu'un seul thread, soit activer le parmètre "PARRALELMODE" de CPLEX sur la 
valeur -1 ("opportuniste"). C'est cette dernière option que nous avons conservée puisque cela permet d'autoriser le 
calcul parallèle lorsque c'est fait de façon sécurisée.



Décomposition de Benders classique (NO RELAXATION)
==================================================
Pour le problème de ce TP, nous avons implémenté la décomposition de Benders de façon classique. Dans ce cas-ci, Nous 
avons conjecturé que pour le calcul d'un rayon, la résolution était plus rapide en bornant le polyhèdre. C'est cette
méthode que nous avons selectionnée ici (tout en désactivant quand même le présolve). 

Décomposition de Benders avec relaxation (WITH RELAXATION)
==========================================================
Pour cette méthode, nous appliquons l'algorithme de plans coupants au problème maître relaché (en continu). Une fois la 
solution optimale continue trouvée, nous effectuons alors les nouvelles coupes sur le problème en nombres entiers. Cette
méthode a l'avantage de générer un grand nombre de coupes en résolvant des problèmes continus compacts (ce qui est plus 
rapide que les PLNE). 

Valeur du rayon sans borner le polyhèdre (NO BOUND_RAY)
=======================================================
Tout en conservant la méthode de plans coupants par relaxation, nous avons également testé la méthode expliquée dans la 
note préliminaire pour récupérer la valeur du rayon.

Résolution par plus courts chemins (DIJKSTRA)
=============================================
Dans le cas où la bande passante est de 1, 
Soit t un noeud terminal du graphe G. Afin de répondre à la demande d_t, la somme du flot entrant au noeud t doit être >= d_t.
C'est-à-dire que chacun des chemins arrivant en t contribuent (en terme de flot) à acheminer une partie de la demande.
Sur l'un de ces chemins, on aura donc un flot disons de valeur f qui circule sur tous les arcs. En terme de coût, on va 
donc payer nb_arcs * f et ce sur chacun des chemins empruntés. On a donc tout intérêt à emprunter le chemin contenant 
le moins d'arc afin d'acheminer la totalié du flot. On cherche donc un plus court chemin de s vers chacun des terminaux.

Résultats
=========
Voici les résultats obtenus
TIME_LIMIT = 300.0

=========================================================================================================================
b = 1
                NO RELAXATION    CUTS   |   WITH RELAXATION CUTS        |   NO BOUND_RAY    CUTS        |   DIJKSTRA
                TIME    VALUE  RLXD/INT |   TIME    VALUE  RLXD/INT     |   TIME    VALUE  RLXD/INT     |   TIME    VALUE
=========================================================================================================================
hexagone        0.828   21      0/8     |   0.025       21      8/0     |   0.022       21      8/0     |   0.0    21
benders1.txt    3.133   688     0/69    |   2.374       688     78/0    |   4.376       688     167/0   |   0.0    688
benders2.txt    6.339   390     0/132   |   2.965       390     83/0    |   5.606       390     231/0   |   0.0    390
benders3.txt    8.442   579     0/123   |   4.594       579     87/0    |   15.297      579     381/0   |   0.0    579
benders4.txt    4.51    93      0/108   |   2.192       93      64/0    |   0.89        93      39/0    |   0.0    93

Chacune des instances sont résolues dans le temps imparti.
La méthode de résolution par plus courts chemins est de loin la plus rapide.
La méthode par relaxation semble être environ deux fois plus rapide que sans la relaxation. On observe que la méthode par
relaxation génère généralement moins de coupes et ces coupes toutes générées lors de la phase de relaxation. Il n'y a donc 
qu'un MIP qui est résolu et donne la solution optimale.
Quant à la méthode sans borner le polyhèdre, les résultats dépendent des instances. Il est globalement plus lent, voire 
bien plus lent. Il y a également beaucoup plus de coupes (en relaxation) qui sont générées. Notons que pour ces deux 
méthodes, le temps de résolution semble être proportionnel au nombre de coupes générées. Ce qui détermine les coupes 
générées pour ces deux méthodes est en fait la valeur du rayon qui est renvoyée par le sous problème. Parfois, le fait
de borner le polyhèdre donne un meilleur rayon, mais ce n'est pas un phénomène systématique.


TIME_LIMIT = 300.0
=========================================================================================================================
b = 3
                NO RELAXATION    CUTS   |   WITH RELAXATION CUTS        |   NO BOUND_RAY    CUTS        |   DIJKSTRA
                TIME    VALUE  RLXD/INT |   TIME    VALUE  RLXD/INT     |   TIME    VALUE  RLXD/INT     |   TIME    VALUE
=========================================================================================================================
hexagone        0.055   10      0/9     |   0.024       10      8/0     |   0.022       10      8/0     |
benders1.txt    84.101  237     0/298   |   126.888     237     78/276  |   310.513     233     167/25  |
benders2.txt    302.786 135     0/209   |   302.035     135     104/180 |   505.063     133     251/9   |
benders3.txt    579.069 201     0/272   |   303.143     200     87/192  |   337.411     196     384/0   |
benders4.txt    307.079 36      0/173   |   302.992     37      63/156  |   433.044     34      39/85   |

Pour b=3, les temps de résolution sont bien plus importants pour les trois méthodes. Le temps imparti de 300 secondes n'est
respecté que pour les instances "hexagone" et "benders1". Dans les autres cas, la solution renvoyée n'est donc pas la 
solution optimale mais la meilleure borne inférieure rencontrée (étant donné les coupes déjà ajoutées) jusqu'à présent. 
La solution renvoyée est donc potentiellement non réalisable. En effet, le programme peut être interrompu avant d'avoir
ajouté toutes les coupes nécessaires. 

Lorsque les temps sont bien supérieurs à 300, cela signifie que le programme était bloqué dans un MIP.
Il y a généralement plus de coupes générées en bornant le polyhèdre tout en ayant une meilleure borne inférieure.

PS: On aurait pu mieux gérer la limite de temps en restreignant la phase 2 (en nombres entiers) à respecter non pas le 
temps limite total mais plutôt le temps restant.

On espère que nos remarques vous auront plu. Nous avons beaucoup aimé votre cours, c'était très intéressant et instructif.