===== Installer des liaisons dans un réseau ====

Note préliminaire
=================
Dans le TP précédent, nous avions besoin de récupérer le coefficient directeur d'un rayon. Le problème est le suivant:
CPLEX prouve que le problème est non borné ou infaisable lors du présolve. La résolution n'a alors pas démarré et il 
est donc impossible d'accéder aux valeurs des variables. Pour contrer ce phénomène, nous avons désactivé le présolve.
CPLEX renvoit alors le statut DUAL_INFEASIBLE (qui est plus précis que le précédent) et on a accès aux valeurs des 
variables qui nous donnent directement le coefficient directeur du rayon en question. 
Cette méthode s'est avérée fonctionnelle lors du TP précédent jusqu'à 3000 variables. En effet, après ce seuil, CPLEX
active certains paramètres de calcul parallèle. Ce qui entraine une erreur lors de la résolution. Afin de palier à ce 
problème, nous pouvons soit, n'autoriser qu'un seul thread, soit activer le parmètre "PARRALELMODE" de CPLEX sur la 
valeur -1 ("opportuniste"). C'est cette dernière option que nous avons conservée puisque cela permet d'autoriser le 
calcul parallèle lorsque c'est fait de façon sécurisée.



Décomposition de Benders classique (NO RELAXATION)
==================================================
Pour le problème de ce TP, nous avons implémenté la décomposition de Benders de façon classique. Dans ce cas-ci, Nous 
avons conjecturé que pour le calcul d'un rayon, la résolution était plus rapide en bornant le polyhèdre. C'est cette
méthode que nous avons selectionnée ici (tout en désactivant quand même le présolve). 

Décomposition de Benders avec relaxation (WITH RELAXATION)
==========================================================
Pour cette méthode, nous appliquons l'algorithme de plans coupants au problème maître relaché (en continu). Une fois la 
solution optimale continue trouvée, nous effectuons alors les nouvelles coupes sur le problème en nombres entiers. Cette
méthode a l'avantage de générer un grand nombre de coupes en résolvant des problèmes continus compacts (ce qui est plus 
rapide que les PLNE). 

Valeur du rayon sans borner le polyhèdre (NO BOUND_RAY)
=======================================================
Tout en conservant la méthode de plans coupants par relaxation, nous avons également testé la méthode expliquée dans la 
note préliminaire pour récupérer la valeur du rayon.

Résolution par plus courts chemins (DIJKSTRA)
=============================================
Dans le cas où la bande passante est de 1, 
Soit t un noeud terminal du graphe G. Afin de répondre à la demande d_t, la somme du flot entrant au noeud t doit être >= d_t.
C'est-à-dire que chacun des chemins arrivant en t contriibuent (en terme de flot) à acheminer une partie de la demande.
Sur l'un de ces chemins, on aura donc un flot disons de valeur f qui circule sur tous les arcs. En terme de cout, on va donc 
payer nb_arcs * f. et ce sur chacun des chemins empruntés. On a donc tout intérêt à emprunter le chemin contenant le moins d'arc afin d'acheminer la totalié du flot.

```` 
Dijkstra : calcule un plus court chemin de s vers les terminaux. La distance sur chaque arc est de 1. Donc on cherche à 
minimiser le nombre d'arcs utilisés sur le chemin de s à t. Or sur un arc i j yij = dt. Cela revient donc à minimiser 
le nombre de yij emprunté ie la somme des yij.

cout s-- > i
```

Résultats
=========
Voici les résultats obtenus pour b = 1
TIME_LIMIT = 300.0

=========================================================================================================================
b = 1
                NO RELAXATION    CUTS   |   WITH RELAXATION CUTS        |   NO BOUND_RAY    CUTS        |   DIJKSTRA
                TIME    VALUE  RLXD/INT |   TIME    VALUE  RLXD/INT     |   TIME    VALUE  RLXD/INT     |   TIME    VALUE
=========================================================================================================================
hexagone        0.828   21      0/8     |   0.025       21      8/0     |   0.022       21      8/0     |   0.0    21
benders1.txt    3.133   688     0/69    |   2.374       688     78/0    |   4.376       688     167/0   |   0.0    688
benders2.txt    6.339   390     0/132   |   2.965       390     83/0    |   5.606       390     231/0   |   0.0    390
benders3.txt    8.442   579     0/123   |   4.594       579     87/0    |   15.297      579     381/0   |   0.0    579
benders4.txt    4.51    93      0/108   |   2.192       93      64/0    |   0.89        93      39/0    |   0.0    93

=========================================================================================================================
b = 3
                NO RELAXATION    CUTS   |   WITH RELAXATION CUTS        |   NO BOUND_RAY    CUTS        |   DIJKSTRA
                TIME    VALUE  RLXD/INT |   TIME    VALUE  RLXD/INT     |   TIME    VALUE  RLXD/INT     |   TIME    VALUE
=========================================================================================================================
hexagone        0.055   10      0/9     |   0.024       10      8/0     |   0.022       10      8/0     |
benders1.txt    84.101  237     0/298   |   126.888     237     78/276  |   310.513     233     167/25  |
benders2.txt    302.786 135     0/209   |   302.035     135     104/180 |   505.063     133     251/9   |
benders3.txt    579.069 201     0/272   |   303.143     200     87/192  |   337.411     196     384/0   |
benders4.txt    307.079 36      0/173   |   302.992     37      63/156  |   433.044     34      39/85   |

Pour récupérer la valeur du rayon dans le sous problème, nous avons désactivé le présolve afin que CPLEX ne renvoit pas 
INFEASIBLE_OR_UNBOUNDED.
La résolution doit alors démarrer avant que CPLEX ne prouve l'infaisabilité du dual.
Les variables v et \nu sont alors instanciées et CPLEX renvoit le coefficient directeur du rayon.
Les résultats pour cette méthode sont dans la première colonne "NO BOUND_RAY".


Décomposition de Benders sans relaxation :
===================================================
Seule l'instance hexagone est résolue en temps raisonnable et renvoie la bonne 
solution.
Pour les instances plus grandes, la valeur de l'objectif au moment de l'arrêt est 
plus faible qu'à l'optimum, on en déduit donc qu'il n'y a pas encore toutes les 
coupes.

Dans le tableau suivant on affiche la valeur de la solution trouvée ainsi que le 
temps de résolution.

Valeur; Temps
b   Hexagone    Benders 1    Benders 2    Benders 3
1   21; 0.92             
3   10; 0.072       

Décomposition de Benders avec relaxation:
=============================================
Dans une premier temps, on ajoute des coupes en résolvant le modèle continu. 
Lors de la résolution du problème en variables entières, il y a donc déjà des 
coupes générées et moins d'itérations sont alors nécessaires pour atteindre 
l'optimum.

Valeur; Temps
b   Hexagone    Benders 1    Benders 2    Benders 3
1   21; 0.758   688;
3   10; 0.035   

Résolution par Dijkstra:
===================================================
b   Hexagone    Benders 1    Benders 2    Benders 3
1   

